---

name: Build and Push Docker Image

on:
  # Allows you to run workflow manually from Actions tab
  workflow_dispatch:
    inputs:
      tags:
        description: 'Docker Tag'
        required: true
        default: 'latest'
  push:
    branches: [main,master]
    tags:
      - 'v*.*.*'
    # Only build when files in these directories have been changed
    paths:
      - client/**
      - server/**
      - index.js
      - package.json

jobs:
  build:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-20.04

    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: advplyr/audiobookshelf,ghcr.io/${{ github.repository_owner }}/audiobookshelf
          tags: |
            type=edge,branch=master
            type=semver,pattern={{version}}

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Login to ghcr
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PASSWORD }}

      - name: Build image
        uses: docker/build-push-action@v3
        with:
          tags: ${{ github.event.inputs.tags || steps.meta.outputs.tags }}
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
