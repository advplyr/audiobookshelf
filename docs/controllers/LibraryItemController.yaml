components:
  schemas:
    expanded:
      type: integer
      description: Whether to return Library Item Expanded instead. 0 for false, 1 for true.
      format: binary
      example: 0
    include:
      type: string
      description: "A comma separated list of what to include with the library item. The options are: progress, rssfeed, authors (for books), and downloads (for podcasts). expanded must be 1 for include to have an effect."
      example: progress,rssfeed,authors
    episode:
      type: string
      description: If requesting progress for a podcast, the episode ID to get progress for.

paths:
  /api/items/{id}:
    parameters:
        - name: id
          in: path
          description: The ID of the libraryItem.
          required: true
          schema:
            $ref: '../objects/LibraryItem.yaml#/components/schemas/libraryItemId'
    get:
      summary: Get a library item by ID
      description: Get a library item by ID
      operationId: getLibraryItemById
      tags:
        - LibraryItem
      parameters:
        - name: expanded
          in: query
          description: Whether to return Library Item Expanded instead. 0 for false, 1 for true.
          schema:
            $ref: '#/components/schemas/expanded'
        - name: include
          in: query
          description: "A comma separated list of what to include with the library item. The options are: progress, rssfeed, authors (for books), and downloads (for podcasts). expanded must be 1 for include to have an effect."
          schema:
            $ref: '#/components/schemas/include'
        - name: episode
          in: query
          description: If requesting progress for a podcast, the episode ID to get progress for.
          schema:
            $ref: '#/components/schemas/episode'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '../objects/LibraryItem.yaml#/components/schemas/libraryItemBase'